con <- dbConnect(RMariaDB::MariaDB(),
host=host,dbname=dbname,user=user,password=password)
sql <- paste0("SELECT * FROM ",dbName)
sql.res <- dbSendQuery(con,sql)
query.df <- dbFetch(sql.res, n = -1) # n = -1 表示提取所有
dbClearResult(sql.res)
dbDisconnect(con)
return(query.df)
}
}
db.dat <- queryDataFromMySQL('miao_2018_clinical')
miao_2018_clin <- queryDataFromMySQL('miao_2018_clinical')
miao_2018_mutation <- queryDataFromMySQL('miao_2018_mutation')
View(miao_2018_clin)
save(miao_2018_clin,miao_2018_mutation
file = "../../P40.CSMD2LUAD/data/Miao2018.Rdata")
miao_2018_clin <- queryDataFromMySQL('miao_2018_clinical')
miao_2018_mutation <- queryDataFromMySQL('miao_2018_mutation')
save(miao_2018_clin,miao_2018_mutation,file = "../../P40.CSMD2LUAD/data/Miao2018.Rdata")
miao_2015_clin <- queryDataFromMySQL('miao_2015_clinical')
gandara_2018_clin <- queryDataFromMySQL('gandara_2018_clinical')
gandara_2018_mutation <- queryDataFromMySQL('gandara_2018_mutation')
save(gandara_2018_clin,gandara_2018_mutation,file = "../../P40.CSMD2LUAD/data/Gandara2018.Rdata")
View(gandara_2018_clin)
hellmann_2018_clin <- queryDataFromMySQL('hellmann_2018_clinical')
hellmann_2018_mutation <- queryDataFromMySQL('hellmann_2018_mutation')
save(hellmann_2018_clin,hellmann_2018_mutation,file = "../../P40.CSMD2LUAD/data/Hellmann2018.Rdata")
samstein_2018_clin <- queryDataFromMySQL('samstein_2018_clinical')
samstein_2018_mutation <- queryDataFromMySQL('samstein_2018_mutation')
save(samstein_2018_clin,samstein_2018_mutation,file = "../../P40.CSMD2LUAD/data/Samstein2018.Rdata")
View(samstein_2018_clin)
View(samstein_2018_mutation)
rizvi_2018_clin <- queryDataFromMySQL('rizvi_2018_clinical')
rizvi_2018_mutation <- queryDataFromMySQL('rizvi_2018_mutation')
save(rizvi_2018_clin,rizvi_2018_mutation,file = "../../P40.CSMD2LUAD/data/Rizvi2018.Rdata")
rizvi_2015_clin <- queryDataFromMySQL('rizvi_2015_clinical')
rizvi_2015_mutation <- queryDataFromMySQL('rizvi_2015_mutation')
save(rizvi_2015_clin,rizvi_2015_mutation,file = "../../P40.CSMD2LUAD/data/Rizvi2015.Rdata")
bai_2020_clin <- queryDataFromMySQL('bai_2020_clinical')
bai_2020_mutation <- queryDataFromMySQL('bai_2020_mutation')
save(bai_2020_clin,bai_2020_mutation,file = "../../P40.CSMD2LUAD/data/Bai2020.Rdata")
View(bai_2020_clin)
wang_2019_clin <- queryDataFromMySQL('wang_2019_clinical')
wang_2019_mutation <- queryDataFromMySQL('wang_2019_mutation')
save(wang_2019_clin,wang_2019_mutation,file = "../../P40.CSMD2LUAD/data/Wang2019.Rdata")
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
output$iciexplore_maintabs <- renderUI(
tabPanel(includeMarkdown("tab_00_ici_explorer/impact_pred_wf.Rmd"))
)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
tempReport <- file.path(tempdir(), "tab_00_ici_explorer/impact_pred_wf.Rmd")
tempReport
params <- list(stats_list = stats_list)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
source("~/Documents/Rprojects/Pro3BNR/A02.proj/P20.OmicsMiner/IMPACT/tab_00_ici_explorer/tab.R")
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
source('runApp.R')
rm(list = ls())
gc()
library(shiny)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
library(RMySQL)
library(RMariaDB)
# 关闭多有sql连接,注释是否会影响别的项目？
killDbConnections <- function () {
all_cons <- dbListConnections(MySQL())
print(all_cons)
for(con in all_cons)
+  dbDisconnect(con)
print(paste(length(all_cons), " connections killed."))
}
killDbConnections()
# 数据库查询
queryDataFromMySQL <- function(dbName){
host <- "127.0.0.1"         # dev or prod
# host <- "47.104.15.105"   # prod:文传的阿里云路径
# dbname <- "icbcohorts"
# user <- "icbuser"
# password <- "ICB2021"       # dev
# password <- "ICB2021#1qaz"  # prod
dbname <- "impact"
user <- "explorer"
password <- "GZlyc@0704!"
con <- dbConnect(RMariaDB::MariaDB(),
host=host,dbname=dbname,user=user,password=password)
sql <- paste0("SELECT * FROM ",dbName)
sql.res <- dbSendQuery(con,sql)
query.df <- dbFetch(sql.res, n = -1) # n = -1 表示提取所有
dbClearResult(sql.res)
dbDisconnect(con)
return(query.df)
}
chen_2019_clin <- queryDataFromMySQL('chen_2019_clinical')
wang_2019_mutation <- queryDataFromMySQL('chen_2019_mutation')
View(wang_2019_mutation)
View(chen_2019_clin)
save(wang_2019_clin,wang_2019_mutation,file = "../../P40.CSMD2LUAD/data/Chen2019.Rdata")
save(chen_2019_clin,chen_2019_mutation,file = "../../P40.CSMD2LUAD/data/Chen2019.Rdata")
chen_2019_clin <- queryDataFromMySQL('chen_2019_clinical')
chen_2019_mutation <- queryDataFromMySQL('chen_2019_mutation')
save(chen_2019_clin,chen_2019_mutation,file = "../../P40.CSMD2LUAD/data/Chen2019.Rdata")
tcga_luad_clin <- queryDataFromMySQL('tcga_luad_clinical')
View(tcga_luad_clin)
tcga_luad_mutation <- queryDataFromMySQL('tcga_luad_mutation')
save(tcga_luad_clin,tcga_luad_mutation,file = "../../P40.CSMD2LUAD/data/TCGA_LUAD.Rdata")
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
styler:::style_selection()
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
install.packages("~/Downloads/Modmatcher-master/Modmatcher_0.1.0.tar.gz", repos = NULL, type = "source")
library(Modmatcher)
install.packages('upsetjs')
library(upsetjs)
devtools::install_url("https://github.com/upsetjs/upsetjs_r/releases/latest/download/upsetjs.tar.gz")
library(upsetjs)
library(upsetjs)
listInput <- list(one = c(1, 2, 3, 5, 7, 8, 11, 12, 13),
two = c(1, 2, 4, 5, 10),
three = c(1, 5, 6, 7, 8, 9, 10, 12, 13)
)
upsetjs()
upsetjs() %>%
fromList(listInput)
upsetjs() %>%
fromList(listInput) %>%
interactiveChart()
library(upsetjs)
upsetjsVennDiagram() %>%
fromList(listInput) %>% interactiveChart()
devtools::install_github('lvulliard/BioCircos.R', build_vignettes = TRUE))
devtools::install_github('lvulliard/BioCircos.R', build_vignettes = TRUE)
library(BioCircos)
library(BioCircos)
vignette('BioCircos')
BioCircos()
myGenome = list("A" = 10,
"B" = 8,
"C" = 12,
"D" = 7,
"E" = 9,
"F" = 8)
BioCircos(genome = myGenome, genomeFillColor = c("tomato2", "darkblue"),
genomeTicksScale = 4e+3)
BioCircos(genome = myGenome, genomeFillColor = c("tomato2", "darkblue"))
devtools::install_github('davidgohel/ggiraph')
library(ggiraph)
library(ggplot2)
library(ggiraph)
data <- mtcars
data$carname <- row.names(data)
gg_point = ggplot(data = data) +
geom_point_interactive(aes(x = wt, y = qsec, color = disp,
tooltip = carname, data_id = carname)) +
theme_minimal()
girafe(ggobj = gg_point)
dat <- data.frame(
name = c( "Guy", "Ginette", "David", "Cedric", "Frederic" ),
gender = c( "Male", "Female", "Male", "Male", "Male" ),
height = c(169, 160, 171, 172, 171 ) )
p <- ggplot(dat, aes( x = name, y = height, fill = gender,
data_id = name ) ) +
geom_bar_interactive(stat = "identity") +
scale_fill_manual_interactive(
values = c(Male = "#0072B2", Female = "#009E73"),
data_id = c(Female = "Female", Male = "Male"),
tooltip = c(Male = "Male", Female = "Female")
)
girafe(ggobj = p)
x <- girafe(ggobj = p)
x
install.packages("formattable")
devtools::install_github("renkun-ken/formattable")
df <- data.frame(
id = 1:10,
name = c("Bob", "Ashley", "James", "David", "Jenny",
"Hans", "Leo", "John", "Emily", "Lee"),
age = c(28, 27, 30, 28, 29, 29, 27, 27, 31, 30),
grade = c("C", "A", "A", "C", "B", "B", "B", "A", "C", "C"),
test1_score = c(8.9, 9.5, 9.6, 8.9, 9.1, 9.3, 9.3, 9.9, 8.5, 8.6),
test2_score = c(9.1, 9.1, 9.2, 9.1, 8.9, 8.5, 9.2, 9.3, 9.1, 8.8),
final_score = c(9, 9.3, 9.4, 9, 9, 8.9, 9.25, 9.6, 8.8, 8.7),
registered = c(TRUE, FALSE, TRUE, FALSE, TRUE, TRUE, TRUE, FALSE, FALSE, FALSE),
stringsAsFactors = FALSE)
df
formattable(df,
list(
age = color_tile("white", "orange"),
grade = formatter("span", style = x ~ ifelse(x == "A",
style(color = "green", font.weight = "bold"), NA)),
area(col = c(test1_score, test2_score)) ~ normalize_bar("pink", 0.2),
final_score = formatter("span",
style = x ~ style(color = ifelse(rank(-x) <= 3, "green", "gray")),
x ~ sprintf("%.2f (rank: %02d)", x, rank(-x))),
registered = formatter("span",
style = x ~ style(color = ifelse(x, "green", "red")),
x ~ icontext(ifelse(x, "ok", "remove"), ifelse(x, "Yes", "No")))
))
library(formattable)
formattable(df,
list(
age = color_tile("white", "orange"),
grade = formatter("span", style = x ~ ifelse(x == "A",
style(color = "green", font.weight = "bold"), NA)),
area(col = c(test1_score, test2_score)) ~ normalize_bar("pink", 0.2),
final_score = formatter("span",
style = x ~ style(color = ifelse(rank(-x) <= 3, "green", "gray")),
x ~ sprintf("%.2f (rank: %02d)", x, rank(-x))),
registered = formatter("span",
style = x ~ style(color = ifelse(x, "green", "red")),
x ~ icontext(ifelse(x, "ok", "remove"), ifelse(x, "Yes", "No")))
))
devtools::install_github("rstudio/crosstalk")
devtools::install_github("jcheng5/d3scatter")
library(crosstalk)
library(d3scatter)
library(leaflet)
d3scatter(iris, ~Petal.Length, ~Petal.Width, ~Species)
data(iris)
force(iris)
shared_iris <- SharedData$new(iris)
View(shared_iris)
bscols(
d3scatter(shared_iris, ~Petal.Length, ~Petal.Width, ~Species, width="100%", height=300),
d3scatter(shared_iris, ~Sepal.Length, ~Sepal.Width, ~Species, width="100%", height=300)
)
bscols(
d3scatter(iris, ~Petal.Length, ~Petal.Width, ~Species),
d3scatter(iris, ~Petal.Length, ~Sepal.Width, ~Species)
)
shared_mtcars <- SharedData$new(mtcars)
View(shared_mtcars)
data(mtcars)
force(mtcars)
View(mtcars)
library(mdthemes)
install.packages()
install.packages('mdthemes')
data("diamonds")
p <- ggplot(diamonds, aes(x = cut, fill = cut)) + geom_bar() +
labs(title = "<span style = 'color:#93C1DE'>**Roche**</span> in <span style = 'color:darkorange'>**mtcars**</span>",
caption = "Visiualized by <span style = 'color:#D52B1E'>**Ayue**</span>")
library(mdthemes)
library(ggplot2)
data("diamonds")
p <- ggplot(diamonds, aes(x = cut, fill = cut)) + geom_bar() +
labs(title = "<span style = 'color:#93C1DE'>**Roche**</span> in <span style = 'color:darkorange'>**mtcars**</span>",
caption = "Visiualized by <span style = 'color:#D52B1E'>**Ayue**</span>")
p + md_theme_minimal()
p
p + md_theme_minimal()
library(ClusterGVis)
devtools::install_github("junjunlab/ClusterGVis")
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
sample(c('2','3','e','5'),1)
sample(c('2','3','e','5'),1)
sample(c('2','3','e','5'),1)
sample(c('2','3','e','5'),1)
sample(c('2','3','e','5'),1)
sample(c('2','3','e','5'),1)
sample(c('2','3','e','5'),1)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
rm(list = ls())
gc()
library(shiny)
runApp("../IMPACT/",launch.browser = T)
